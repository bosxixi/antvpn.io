DROP FUNCTION IF EXISTS	dbo.GetAccountings; 
GO

CREATE FUNCTION dbo.GetAccountings
	(@userid AS nvarchar(450),
	@begintime AS date,
	@endtime AS date) 
	returns table
AS
return

with eventtables(inputoctets,outputoctes, username) as
(
	select cast(JSON_VALUE(InfoJSON, '$.Acct_Input_Octets') as bigint),  cast(JSON_VALUE(InfoJSON, '$.Acct_Output_Octets') as bigint),
	JSON_VALUE(InfoJSON, '$.User_Name')
	from dbo.eventraw
	where JSON_VALUE(InfoJSON, '$.Acct_Status_Type') = 2 
	  --and JSON_VALUE(InfoJSON, '$.User_Name') in( 'bosxixi', 'c01')
	  and JSON_VALUE(InfoJSON, '$.User_Name') in(select LoginName from [dbo].[logins] where UserId = @userid)
	  and cast(JSON_VALUE(InfoJSON, '$.Event_Timestamp') as date) >= @begintime and cast(JSON_VALUE(InfoJSON, '$.Event_Timestamp') as date) < @endtime

	union
		select sum(TotalBytesIn) as totalinput, sum(TotalBytesOut) as totaloutput, username
	 from [current] where [TimeStamp] in (select [TimeStamp] from [dbo].[currentmeta])
	 and [UserName] in (select LoginName from [dbo].[logins] where UserId = @userid)
	 group by username
)

select sum(inputoctets) as totalinput, sum(outputoctes) as totaloutput, username from eventtables
group by username;

--proc

go
	select totalinput, totaloutput,username from dbo.GetAccountings('04a3ae52-b42d-438a-b5a7-17c52e0f8ec5', '1753-1-1', '2017-11-11')

	

	


ALTER TABLE [dbo].[eventraw]  WITH CHECK ADD  CONSTRAINT [Content should be formatted as JSON] CHECK  ((isjson([InfoJSON])>(0)))
GO

ALTER TABLE [dbo].[eventraw] CHECK CONSTRAINT [Content should be formatted as JSON]
GO
