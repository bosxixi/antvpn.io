@model WebMVC.ViewModels.LoginBindingModel

<div class="space-header"></div>
<div class="container">
    <div class="page-header">
        <div class="row">
            <div class="col-md-6">
                <a href="#">
                    @if (User.FindFirst("email").Value == "bosxixi@outlook.com")
                    {
                        <img id="profile-picture" class="person-graphic win-color-bg-10" alt="" src="https://cid-33c11863920db22c.users.storage.live.com/users/0x33c11863920db22c/myprofile/expressionprofile/profilephoto:Win8Static,UserTileMedium,UserTileStatic/MeControlXXLUserTile?ck=1&amp;ex=24">
                    }
                    else
                    {
                        <img id="profile-picture" class="person-graphic win-color-bg-10" alt="" src="~/images/default-avatar.png">
                    }
                </a>
            </div>
            <div class="col-md-12 col-xs-12">
                <div class="profile-detail">
                    <h3>Hello!</h3>
                    <p>@User.FindFirst("email").Value</p>
                    <ul class="nav nav-pills">
                        <li role="presentation">
                            <a href="#"><span class="glyph glyph-permissions"></span>Change password</a>
                        </li>
                        <li role="presentation">
                            <a href="#"><span class="glyph glyph-shopping-cart"></span>Payment</a>
                        </li>
                        <li role="presentation">
                            <a href="#"><span class=""></span>Redeem code</a>
                        </li>
                    </ul>
                </div>

            </div>

            <div class="col-md-6 col-xs-12">
                <canvas id="myChart" width="400" height="400"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="type-p1">VPN accounts</div>
            <div class="entity-list entity-list-add-item-button">
                <a class="entity-list-item" href="#" data-toggle="modal" data-target="#modal-addlogin">
                    <div class="item-icon">
                        <span class="glyph glyph-add"></span>
                    </div>
                    <div class="item-content-primary">
                        <div class="content-text-primary">Add an item</div>
                    </div>
                </a>
            </div>

            @if (ViewData["logins"] != null)
            {
                <div class="entity-list entity-list-expandable">
                    @foreach (var l in (IEnumerable<SharedProject.LoginStatus>)ViewData["logins"])
                {
                        <div class="entity-list-item">
                            <div class="item-icon">
                                @if (l.AllowDialIn && l.Enabled)
                                {
                                    <span class="glyph glyph-contact"></span>
                                }
                                else
                                {
                                    <span class="glyph glyph-block-contact"></span>
                                }
                            </div>
                            <div class="item-content-secondary">
                                @if (l.IsOnline)
                                {
                                    <text>Status: <span title="Online" class="glyph glyph-radio-bullet status-running"></span></text>
                                }
                                else
                                {
                                    <text>Status: <span title="Offline" class="glyph glyph-radio-bullet status-stop"></span></text>
                                }
                                <div class="content-text-secondary">@(l.LastUpdated?.ToLocalTime().ToString("yyyy/MM/dd"))</div>
                            </div>
                            <div class="item-content-primary">
                                <div class="content-text-primary">@l.LoginName</div>

                                <div class="content-text-secondary">
                                    @*Allow dial in: @(l.AllowDialIn && l.Enabled ? "Yes" : "No")*@

                                    @if (String.IsNullOrEmpty(l.MonthlyTrafficDisplay))
                                    {
                                        <div class="content-text-primary text-right">@(l.BasicAcct?.TotalInOutDisplay) / Unlimited</div>
                                    }
                                    else
                                    {
                                        <div class="content-text-primary text-right">@(l.BasicAcct?.TotalInOutDisplay) / @(l.MonthlyTrafficDisplay)</div>
                                    }
                                </div>
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar" aria-valuenow="@(l.BasicAcct?.TotalInOut.ToString())" aria-valuemin="0" aria-valuemax="@(l.MonthlyTraffic.ToString())" style="width: @(l.Percent());">
                                        <span class="sr-only">@(l.Percent())</span>
                                    </div>
                                </div>
                            </div>
                            <div class="item-content-expanded">
                                <button class="btn btn-default configure" data-loginname="@l.LoginName" data-traffic="@l.MonthlyTraffic" data-toggle="modal" data-target="#modal-configure">Configure</button>
                                <button class="btn btn-default reset-password" data-loginname="@l.LoginName" data-toggle="modal" data-target="#modal-resetpassword">Reset password</button>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <div class="col-md-12">
            <div class="type-h6">Recent activity</div>
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="color-bg-light-vivid-low">
                        <tr>
                            <th>Account</th>
                            <th>Disconnect Time</th>
                            <th class="hidden-xs">Protocal</th>
                            <th>Duration</th>
                            <th class="text-right">TotalTraffic</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewData["acctRaws"] != null)
                        {
                            @foreach (var a in (IEnumerable<WebMVC.ViewModels.AcctRawViewModel>)ViewData["acctRaws"])
                            {
                                <tr>
                                    <td>@a.UserName</td>
                                    <td>@a.EventTime</td>
                                    <td class="hidden-xs">@a.Protocal</td>
                                    <td>@a.DurationDisplay()</td>
                                    <td class="text-right">@a.TotalTraffic</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!--
        Modal
-->

<div class="modal" id="modal-addlogin" tabindex="-1" role="dialog" aria-labelledby="modal-sample-label" aria-hidden="true">
    <div class="modal-dialog">
        <form asp-controller="Dashboard" asp-action="Create" method="post">
            <!-- Input and Submit elements -->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-sample-label">
                        Create VPN Server Login
                    </h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="UserName">Username</label>
                        <input asp-for="UserName" class="form-control">
                        <span asp-validation-for="UserName"></span>
                    </div>

                    <div class="form-group">
                        <label for="Password">Password</label>
                        <input asp-for="Password" class="form-control">
                        <span asp-validation-for="Password"></span>
                    </div>

                    <div class="form-group">
                        <label for="ConfirmPassword">Password</label>
                        <input asp-for="ConfirmPassword" class="form-control">
                        <span asp-validation-for="ConfirmPassword"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        Submit
                    </button>
                    <button type="button" class="btn btn-info"
                            data-dismiss="modal">
                        Cancel
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="modal" id="modal-resetpassword" tabindex="-1" role="dialog" aria-labelledby="modal-sample-label" aria-hidden="true">
    <div class="modal-dialog">
        <form asp-controller="Dashboard" asp-action="Reset" method="post">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-sample-label">
                        Reset VPN Server Login <span><strong id="showloginname"></strong>'s</span> password
                    </h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="UserName" id="resetusername" class="form-control">
                    <div class="form-group">
                        <label for="Password">New Password</label>
                        <input asp-for="Password" class="form-control">
                        <span asp-validation-for="Password"></span>
                    </div>

                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm Password</label>
                        <input asp-for="ConfirmPassword" class="form-control">
                        <span asp-validation-for="ConfirmPassword"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        Submit
                    </button>
                    <button type="button" class="btn btn-info"
                            data-dismiss="modal">
                        Cancel
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="modal" id="modal-configure" tabindex="-1" role="dialog" aria-labelledby="modal-sample-label" aria-hidden="true">
    <div class="modal-dialog">
        <form asp-controller="Dashboard" asp-action="Configure" method="post">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-sample-label">
                        Configure VPN Server Login <span><strong id="showloginname-configure"></strong></span>
                    </h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="UserName" id="resetusername-configure" class="form-control">
                    <div class="form-group">
                        <label for="MonthlyTraffic">Shared Traffic: <span id="max-traffic"></span></label>
                        <input id="slider-traffic" name="MonthlyTraffic" class="win-slider" type="range" step="10485760" min="0" max="@ViewData["traffic"]" />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        Submit
                    </button>
                    <button type="button" class="btn btn-info"
                            data-dismiss="modal">
                        Cancel
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $("#slider-traffic").on("change", (e) => {
                var value = $("#slider-traffic").val();
                value = Number(value);
                if (value == 0) {
                    $("#max-traffic").html("unlimited");
                } else {
                    value = value / 1024 / 1024;
                    $("#max-traffic").html(value + " MB");
                }

            });

            $(".reset-password").on("click", e => {
                var l = e.currentTarget.attributes["data-loginname"].value;
                $("#showloginname").text(l);
                $('#resetusername').val(l);

            });

            $(".configure").on("click", e => {
                var l = e.currentTarget.attributes["data-loginname"].value;
                var t = e.currentTarget.attributes["data-traffic"].value;
                $("#showloginname-configure").text(l);
                $('#resetusername-configure').val(l);
                $("#slider-traffic").val(t);
                $("#slider-traffic").trigger("change");
            });
        });
        @{
            ViewData["usedgb"] = double.Parse(ViewData["used_gb"].ToString()).ToString("0.00");
            ViewData["availablegb"] = (double.Parse(ViewData["traffic_gb"].ToString()) - double.Parse(ViewData["used_gb"].ToString())).ToString("0.00");
        }
        var data = {
            labels: [
                "Used @ViewData["usedgb"] GB",
                "Available @ViewData["availablegb"] GB"
            ],
            datasets: [
                {
                    data: [@ViewData["usedgb"], @ViewData["traffic_gb"] - @ViewData["usedgb"]],
                    backgroundColor: [
                        "#0078D7",
                        "#CCCCCC"
                    ],
                    hoverBackgroundColor: [
                        "#36A2EB",
                        "#808080"
                    ]
                }]
        };

        var ctx = document.getElementById("myChart");
        // For a pie chart
        var myPieChart = new Chart(ctx, {
            type: 'doughnut',
            data: data,
            options: {
            }
        });
    </script>
}
